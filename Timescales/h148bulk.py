import matplotlib as mpl
mpl.use('Agg')
import pynbody
import matplotlib.pyplot as plt
import numpy as np
import pynbody.plot as pp
import pynbody.filt as filt
import pickle
import pandas as pd
import logging
from pynbody import array,filt,units,config,transformation
from pynbody.analysis import halo
import os

# set the config to prioritize the AHF catalog
pynbody.config['halo-class-priority'] =  [pynbody.halo.ahf.AHFCatalogue,
                                          pynbody.halo.GrpCatalogue,
                                          pynbody.halo.AmigaGrpCatalogue,
                                          pynbody.halo.legacy.RockstarIntermediateCatalogue,
                                          pynbody.halo.rockstar.RockstarCatalogue,
                                          pynbody.halo.subfind.SubfindCatalogue, pynbody.halo.hop.HOPCatalogue]


from timescales_bulk import bulk_processing


snapshots = ['h148.cosmo50PLK.3072g3HbwK1BH.004096', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003968', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003840', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003712', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003606', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003584', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003456', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003328', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003200', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003195', 
             'h148.cosmo50PLK.3072g3HbwK1BH.003072', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002944', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002816', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002688', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002554', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002432', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002304', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002176', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002088', 
             'h148.cosmo50PLK.3072g3HbwK1BH.002048', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001920', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001740', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001536', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001408', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001280', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001269', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001152', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001106', 
             'h148.cosmo50PLK.3072g3HbwK1BH.001024', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000974', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000896', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000866', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000768', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000701', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000640', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000512', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000456', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000384', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000347', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000275', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000225', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000188', 
             'h148.cosmo50PLK.3072g3HbwK1BH.000139']


haloids = {
    1: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 14, 53, 47, 58],
    2: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 5, 5, 7, 11, 30, 35, 17, 20, 26],
    3: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 6, 9, 12, 7, 8, 14, 18, 16, 14, 17, 11, 8, 5, 4],
    4: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 6, 7, 7, 7, 7, 7, 11, 14, 9, 8, 10, 9, 5, 3, 3, 3, 5],
    6: [6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 7, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 9, 9, 7, 8, 10, 12, 8, 8, 13, 12, 15, 17, 18, 18, 18, 51, 50, 48, 49],
    7: [7, 7, 7, 7, 7, 7, 7, 8, 7, 7, 7, 9, 9, 10, 8, 9, 8, 8, 8, 8, 8, 8, 8, 8, 11, 11, 9, 9, 12, 11, 10, 10, 8, 10, 23, 22, 20, 19, 22, 26, 12, 11, 121],
    10: [10, 9, 9, 9, 8, 8, 9, 9, 8, 8, 8, 10, 10, 6, 9, 10, 10, 10, 11, 10, 10, 10, 11, 13, 16, 16, 18, 19, 19, 17, 20, 20, 31, 37, 41, 42, 42, 40, 43, 31, 14, 12, 17],
    11: [11, 11, 11, 11, 11, 11, 12, 12, 11, 11, 11, 14, 14, 13, 14, 14, 15, 14, 14, 14, 14, 14, 18, 18, 21, 21, 20, 21, 23, 25, 30, 29, 34, 39, 44, 52, 79, 112, 128, 153, 415, 484],
    12: [12, 12, 12, 12, 12, 12, 13, 13, 12, 12, 12, 13, 13, 6, 9, 10, 10, 10, 11, 10, 10, 10, 11, 13, 16, 16, 18, 19, 19, 17, 20, 20, 31, 37, 41, 42, 42, 40, 43, 31, 14, 12, 17],
    13: [13, 13, 13, 13, 13, 13, 14, 14, 13, 13, 13, 15, 15, 14, 13, 15, 17, 15, 15, 15, 17, 16, 19, 32, 38, 38, 41, 42, 56, 132, 105, 112, 109, 118, 125, 130, 169, 269, 260, 283, 355, 336, 418],
    15: [15, 16, 16, 16, 16, 16, 16, 16, 14, 14, 15, 17, 18, 17, 18, 19, 19, 18, 17, 18, 19, 18, 20, 22, 26, 29, 33, 35, 37, 53, 69, 73, 70, 90, 98, 182, 215, 280, 384, 436, 519, 490, 358],
    21: [21, 20, 22, 23, 24, 23, 24, 23, 22, 22, 23, 25, 24, 26, 26, 29, 29, 30, 30, 30, 33, 33, 35, 38, 39, 41, 38, 41, 39, 43, 45, 44, 43, 54, 69, 120, 125, 142, 198, 331, 372],
    23: [23, 23, 23, 22, 20, 20, 19, 18, 17, 17, 14, 16, 16, 15, 16, 17, 16, 12, 9, 12, 13, 15, 16, 16, 13, 12, 21, 23, 26, 26, 28, 27, 25, 30, 33, 34, 33, 41, 53, 139, 266, 382],
    27: [27, 25, 21, 18, 17, 17, 18, 17, 16, 16, 17, 19, 17, 16, 15, 16, 14, 16, 19, 16, 12, 12, 12, 11, 17, 17, 16, 17, 18, 20, 23, 24, 23, 24, 24, 45, 53, 114, 107, 169, 263, 278],
    28: [28, 24, 25, 24, 23, 22, 25, 25, 25, 25, 26, 28, 29, 29, 28, 28, 26, 26, 26, 26, 30, 31, 24, 30, 47, 48, 53, 55, 58, 57, 62, 62, 64, 68, 68, 86, 124, 222, 250, 251, 305, 398, 435],
    29: [29, 29, 30, 31, 32, 32, 33, 33, 32, 32, 35, 36, 34, 31, 29, 30, 32, 45, 52, 53, 57, 64, 67, 69, 74, 75, 67, 68, 70, 70, 71, 71, 83, 100, 110, 124, 152, 171, 186, 204, 177, 136, 113],
    33: [33, 32, 29, 37, 28, 28, 27, 26, 24, 24, 24, 26, 25, 27, 25, 25, 25, 27, 27, 27, 31, 32, 34, 35, 34, 35, 35, 36, 40, 45, 46, 48, 47, 51, 56, 56, 60, 62, 73, 91, 96, 119, 294],
    34: [34, 34, 35, 34, 34, 34, 34, 29, 27, 26, 27, 27, 23, 23, 23, 23, 24, 23, 25, 25, 28, 26, 30, 29, 31, 30, 32, 34, 36, 42, 47, 51, 52, 55, 61, 108, 132, 207, 220, 249, 300, 634],
    36: [36, 35, 31, 29, 30, 30, 30, 31, 29, 29, 32, 35, 36, 34, 31, 31, 34, 34, 35, 37, 39, 39, 47, 50, 56, 57, 60, 62, 62, 62, 72, 78, 93, 105, 126, 218, 367, 494, 555, 893],
    38: [38, 39, 40, 40, 41, 41, 45, 45, 45, 45, 47, 49, 50, 48, 46, 45, 46, 50, 51, 52, 54, 60, 65, 65, 64, 64, 63, 61, 71, 79, 101, 108, 116, 136, 141, 135, 139, 156, 201, 297, 298, 244],
    39: [39, 38, 38, 36, 36, 36, 35, 34, 31, 30, 29, 32, 26, 22, 20, 20, 20, 19, 20, 20, 21, 20, 22, 23, 24, 24, 27, 29, 32, 35, 35, 32, 29, 36, 54, 65, 66, 75, 157, 176, 243, 353, 318],
    44: [44, 44, 45, 42, 43, 44, 44, 44, 44, 44, 45, 48, 48, 49, 47, 49, 48, 51, 50, 50, 47, 54, 81, 82, 85, 88, 96, 293, 269, 239, 213, 201, 205, 226, 240, 253, 268, 304, 289, 312, 281, 311, 290],
    48: [48, 43, 42, 41, 42, 42, 42, 41, 38, 38, 34, 30, 27, 20, 19, 21, 21, 21, 21, 22, 25, 24, 26, 24, 25, 25, 26, 27, 43, 38, 40, 38, 100, 134, 146, 219, 234, 266, 292, 624, 789],
    52: [52, 49, 50, 49, 48, 47, 46, 46, 46, 46, 48, 51, 52, 55, 52, 54, 58, 60, 62, 61, 63, 68, 68, 71, 116, 132, 165, 197, 213, 219, 209, 199, 175, 157, 129, 224, 227, 221, 223, 213, 232, 288, 273],
    53: [53, 54, 55, 55, 58, 58, 55, 53, 48, 48, 46, 47, 45, 41, 40, 42, 43, 42, 47, 47, 52, 55, 57, 62, 65, 65, 65, 67, 72, 75, 78, 79, 76, 82, 93, 103, 106, 99, 104, 97, 76, 53, 50],
    54: [54, 55, 57, 58, 61, 61, 60, 62, 62, 62, 65, 68, 69, 72, 74, 73, 76, 78, 78, 79, 84, 90, 99, 106, 111, 115, 116, 117, 126, 130, 131, 136, 136, 143, 153, 168, 189, 187, 194, 250, 274, 219],
    62: [62, 53, 49, 45, 44, 43, 39, 37, 34, 33, 31, 31, 31, 30, 27, 24, 28, 20, 18, 19, 18, 27, 21, 19, 23, 23, 23, 24, 27, 27, 29, 28, 28, 31, 31, 30, 27, 21, 28, 34, 30, 29, 25],
    69: [69, 84, 74, 74, 75, 75, 73, 71, 63, 63, 60, 52, 49, 50, 70, 78, 85, 84, 81, 82, 85, 93, 127, 142, 160, 161, 171, 178, 206, 214, 221, 216, 232, 257, 274, 324, 332, 340, 321, 274, 296, 298, 213],
    90: [90, 92, 91, 96, 94, 95, 91, 92, 75, 75, 63, 66, 55, 53, 49, 50, 50, 53, 54, 54, 55, 59, 62, 63, 67, 68, 69, 70, 77, 77, 80, 81, 80, 84, 87, 110, 122, 128, 124, 100, 74, 52, 29],
    98: [98, 99, 98, 101, 102, 103, 104, 111, 112, 112, 113, 119, 119, 119, 121, 123, 123, 129, 132, 136, 144, 148, 156, 168, 183, 183, 186, 186, 191, 192, 194, 198, 207, 220, 229, 259, 263, 270, 284, 303, 276, 220, 150],
    116: [116, 117, 121, 121, 123, 123, 123, 125, 122, 122, 122, 120, 116, 115, 111, 107, 101, 97, 96, 99, 99, 95, 84, 105, 122, 123, 129, 132, 139, 141, 144, 151, 144, 145, 156, 200, 208, 205, 197, 223, 891],
    121: [121, 121, 120, 118, 113, 112, 109, 107, 101, 100, 98, 90, 80, 81, 68, 67, 68, 70, 71, 73, 78, 75, 76, 76, 78, 80, 72, 74, 79, 82, 87, 85, 87, 95, 94, 92, 113, 208, 202, 252, 206, 294, 335],
    132: [132, 134, 138, 141, 141, 141, 143, 151, 151, 151, 153, 161, 165, 165, 138, 127],
    133: [133, 129, 115, 75, 55, 55],
    150: [150, 151, 158, 161, 161, 161, 164, 173, 177, 177, 175, 185, 196, 201, 198, 207, 213, 222, 224, 227, 242, 247, 207, 138, 88, 89, 84, 80, 82, 87, 88, 86, 88, 94, 96, 104, 98, 97, 92, 84, 63, 95, 69],
    189: [189, 185, 182, 182, 172, 164, 162, 165, 165, 165, 160, 155, 144, 131, 116, 120, 118, 110, 98, 93, 79, 153, 52, 57, 59, 60, 76, 79, 87, 92, 98, 101, 102, 107, 119, 201, 200, 175, 170, 144, 173, 206, 286],
    217: [217],
    223: [223, 213, 211, 197, 184, 183, 176, 157, 109, 109],
    234: [234, 230, 232, 257, 209, 206, 196],
    244: [244, 232, 235, 178, 240, 216, 132, 134, 110, 110, 109, 114, 110, 110, 90, 69, 49, 40, 43, 29, 32, 42, 49, 52, 53, 53, 50, 52, 53, 55, 58, 61, 66, 72, 73, 83, 100, 143, 160, 168, 215, 228, 241],
    263: [263],
    290: [290, 267, 250, 240, 235, 234, 232, 241, 236, 236, 225, 223, 215, 206, 192, 180, 152, 143, 135, 132, 130, 128, 104, 77],
    306: [306, 302, 281, 254, 219, 214, 199, 204, 189, 189, 183, 176, 169, 170, 154, 154, 153, 159, 156, 158, 164, 159, 164, 176, 185, 188, 200, 204, 209, 215, 203, 203, 217, 235, 235, 221, 199, 311, 329, 291, 291, 316, 262],
    367: [367, 359, 326, 248, 193, 187],
    380: [380],
    436: [436, 303, 180, 88, 50, 50, 50, 54, 54, 54, 57, 61, 61, 58, 54, 56, 64, 64, 64, 64, 64, 63, 73, 99, 104, 107, 112, 116, 125, 128, 139, 144, 148, 150, 151, 162, 162, 181, 187, 197, 223, 221, 177],
    438: [438, 442, 449, 453, 466, 467, 467, 473, 458, 459, 444, 434, 406, 413, 417, 421, 431, 450, 456, 463, 475, 470, 276, 249, 260, 260, 257, 252, 248, 244, 254, 253, 269, 283, 297, 299, 264, 214, 212, 234, 181, 122, 51],
    563: [563, 544, 488, 474, 473, 474, 477, 455, 396, 394, 386, 307, 311, 309, 313, 327, 330, 338, 334, 315, 223, 105, 53, 115, 109, 113, 115, 110, 111, 115, 119, 126, 127, 138, 145, 144, 160, 238, 352, 415, 466],
    653: [653, 668, 682, 697, 720, 726, 734, 763, 779, 778, 790, 806, 738, 591],
    709: [709, 717, 734, 758, 781, 781, 796, 821, 904, 821, 737, 610, 262, 198, 186, 192, 201, 212, 213, 216, 208, 146, 118, 116, 123, 124, 124, 125, 136, 139, 140, 146, 150, 155, 161, 175, 177, 194, 208, 244, 254, 194, 154],
    779: [779, 718, 729, 746, 761, 758, 752, 713, 576, 567, 429],
    901: [901, 849],
    932: [932, 925, 899, 852, 823, 818, 744, 744, 759, 759, 813, 764, 715, 713, 613, 604, 610, 620, 592, 566, 348],
    1090: [1090, 1071, 1052, 1021, 1002, 1001, 1000, 1004, 1000, 995, 990, 1015, 1029, 1012, 996, 1017, 997, 958, 937, 947, 927, 950, 863, 621, 598, 544, 356, 362, 530, 400, 465, 483, 401, 404, 383, 359, 366, 405, 475, 523, 503, 431, 288]
}


path= '/home/christenc/Data/Sims/h148.cosmo50PLK.3072g/h148.cosmo50PLK.3072g3HbwK1BH/snapshots/'

for key in list(haloids.keys()):
    if len(haloids[key]) != len(snapshots):
        for i in range(len(snapshots)-len(haloids[key])):
            haloids[key].append(0)
                        
print(haloids)

savepath = '/home/akinshol/Data/Timescales/DataFiles/h148.data'
if os.path.exists(savepath):
    os.remove(savepath)
    print('Removed previous .data file')
print(f'Saving to {savepath}')

for tstep in range(len(snapshots)):
    bulk_processing(tstep, haloids, snapshots, path, savepath)
